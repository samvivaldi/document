여러개의 자식으로부터 데이터를 모으거나 두 개의 자식 컴포넌트들이 서로 통신하게 하려면 부모 컴포넌트에 공유 state를 정의해야 합니다. 
부모 컴포넌트는 props를 사용하여 자식 컴포넌트에 state를 다시 전달할 수 있습니다. 
이것은 자식 컴포넌트들이 서로 또는 부모 컴포넌트와 동기화 하도록 만듭니다.


git bash 한글문제
git config --global core.precomposeunicode true
git config --global core.quotepath false


---------------
eslint 저장시 자동적용
설정 > 검색 (format javascript) javascript > format:Enable 체크 해제
설정 -> text editor -> formatting -> format on save 체크


-----------------------------------------------------------------------------------
객체 변경을 통해 데이터 수정하기
var player = {score: 1, name: 'Jeff'};
player.score = 2;
// 이제 player는 {score: 2, name: 'Jeff'}입니다.


객체 변경 없이 데이터 수정하기
var player = {score: 1, name: 'Jeff'};

var newPlayer = Object.assign({}, player, {score: 2});
// 이제 player는 변하지 않았지만 newPlayer는 {score: 2, name: 'Jeff'}입니다.

// 만약 객체 spread 구문을 사용한다면 이렇게 쓸 수 있습니다.
// var newPlayer = {...player, score: 2};

-----------------------------------------------------------------------------------

javascript false 로 판단하는 value  ---> false , null , undefined , "" , 0 , NaN


var math = math || {}; // math 네임스페이스 

(function() {
  function sum(a, b) { return a + b; }
  math.sum = sum; // 네이스페이스에 추가 
})();


const today = new Date(); // Tue May 21 2019 22:19:42 GMT+0900 (한국 표준시)
const formattedDate = today.toISOString().substring(0, 10); // "2019-05-21"
const [year, month, day] = formattedDate.split('-');
console.log([year, month, day]); // [ '2019', '05', '21' ]


react
 JSX 를 props 로 전달 해 줄 수 있다는 점만 알아두세요! 나중에 언젠가 유용하게 사용하게될겁니다.
 리액트 state 에서 배열을 다룰 때는 절대로 push 를 사용하면 안됩니다.
 


https://polyfill.io/v3/polyfill.min.js?features=default%2Cconsole

https://cdn.rawgit.com/inexorabletash/polyfill/v0.1.41/polyfill.min.js?features=default%2Cconsole

https://polyfill.io/v3/polyfill.min.js?features=default%2CSet%2CJSON%2CPromise%2Cconsole

http://localhost:8080/v3/polyfill.min.js?features=default%2CSet%2CJSON%2CPromise%2Cconsole

----------------------------------------------

AWS 교육대상자분들은 본교육전에 아래의 온라인 교육을 꼭 수강해 주시기 바랍니다.

AWS Cloud Practitioner Essentials
https://www.aws.training/Details/Curriculum?id=36668
클라우드 개념, AWS 서비스, 보안/아키텍쳐, 요금 및 지원방법

AWS Security Fundamentals
https://www.aws.training/Details/Curriculum?id=11048
클라우드 컴퓨팅 및 AWS 보안에 대한 소개, 액세스 제어 및 관리, 로깅/암호화 및 네트웍 보안, 거버넌스/위험관리 및 규정준수



http://aws.training
